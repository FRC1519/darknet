#!/bin/bash

# TODO Determine which camera is which

# Set directories
declare -r bin=$(readlink -m "$(dirname "${BASH_SOURCE[0]}")")
declare -r share=$(readlink -m "$bin/../share/robot")
declare -r sddata="/media/nvidia/test/trainingdata"
declare var="/var/local/robot"
[[ -d $sddata ]] && var=$sddata

# Set video configuration
declare -r threshold="0.15"
declare -r cap_fps="15/1"
declare -r bitrate=500000
declare -r stream_fps="5/1"
declare -r stream_width="432"
declare -r stream_height="240"
declare -r iframe="1000" # in ms
declare -r -i cap_avg_frame=81 # in KB, for space computation

# Determine IP addresses to use
declare -r netdev="eth0"
declare oi_ip
declare robot_ip
if ip address show dev "$netdev" | grep -q 'inet 192.168.0'; then
    # Development environment
    oi_ip="192.168.0.51"
    #oi_ip="192.168.0.56"
    robot_ip="127.0.0.1"
else
    # Field environment
    oi_ip="10.15.19.5"
    robot_ip="10.15.19.2"
fi

# Detect which camera is where
declare cam1=(/sys/devices/3530000.xhci/usb1/1-2/1-2:1.0/video4linux/video*)
cam1=${cam1##*/video}
if [[ $cam1 == "*" ]]; then
    echo "Failed to find primary camera"
    exit 1
fi
declare cam2=(/sys/devices/3530000.xhci/usb1/1-1/1-1:1.0/video4linux/video*)
cam2=${cam2##*/video}
if [[ $cam2 == "*" ]]; then
    echo "Failed to find primary camera"
    exit 1
fi

# Set file locations
declare -r -a cfg_files=("$share/obj.data" "$share/tiny-yolo-obj.cfg" "$share/tiny-yolo-obj.backup")
declare -r timestamp=$(date --iso-8601=seconds | tr -d :)
declare -r video="$var/capture-$timestamp.avi"
declare -r datalog="$var/datalog-$timestamp.csv"
declare -r netlog="$var/network-$timestamp.csv"

# Check disk space
declare -r -i req_minutes=15 # How many minutes we should be able record
declare -r -i min_space=$((cap_avg_frame * cap_fps * 2 * 60 * req_minutes))
declare -r -i free_space=$(df -k "$var" | awk 'NR==2 {print $4}')
if [[ $free_space -lt $min_space ]]; then
    echo "ERROR: Not enough free space.  Need $min_space KB, only have $free_space KB" >&2
    exit 1
fi

# Start the network logger
"$bin"/netlog "$netdev" "$netlog" &

# Enable core dump collection
ulimit -c unlimited

# Run robot vision program
cd "$share"
export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
"$bin"/robot --gpu 0 --thresh "$threshold" --camera "$cam1" --camera2 "$cam2" --fps "$cap_fps" --stream-width "$stream_width" --stream-height "$stream_height" --stream-fps "$stream_fps" --bitrate "$bitrate" --iframe "$iframe" --oper-ip "$oi_ip" --robot-ip "$robot_ip" --video "$video" --data-log "$datalog" "${cfg_files[@]}"
